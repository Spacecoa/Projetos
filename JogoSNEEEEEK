import pygame
import random
import sys

# Inicialização do Pygame
pygame.init()

# Configurações da janela do jogo
largura_janela = 800
altura_janela = 600
janela = pygame.display.set_mode((largura_janela, altura_janela))
pygame.display.set_caption("Ssssneek Game")

# Cores
PRETO = (0, 0, 0)
BRANCO = (255, 255, 255)
VERMELHO = (200, 0, 255)
DESTAQUE = (100, 100, 100)


# Tamanho do corpo da cobra
tamanho_cobra = 15

# Velocidade da cobra
velocidade = 15

# Função para desenhar a cobra
def desenhar_cobra(corpo):
    for parte in corpo:
        pygame.draw.rect(janela, VERMELHO, (parte[0], parte[1], tamanho_cobra, tamanho_cobra))

# Função para exibir o botão de reiniciar
def exibir_botao_reiniciar():
    retangulo = pygame.Rect(300, 200, 200, 50)
    pygame.draw.rect(janela, DESTAQUE, retangulo)
    fonte = pygame.font.SysFont(None, 30)
    texto = fonte.render("Reiniciar", True, BRANCO)
    janela.blit(texto, (350, 215))
    return retangulo

# Função para exibir o botão de sair
def exibir_botao_sair():
    retangulo = pygame.Rect(300, 300, 200, 50)
    pygame.draw.rect(janela, DESTAQUE, retangulo)
    fonte = pygame.font.SysFont(None, 30)
    texto = fonte.render("Sair", True, BRANCO)
    janela.blit(texto, (375, 315))
    return retangulo

# Função principal do jogo
def jogo_cobrinha():
    # Posição inicial da cobra
    pos_x = largura_janela // 2
    pos_y = altura_janela // 2

    # Velocidade inicial da cobra
    vel_x = 0
    vel_y = 0

    # Inicialização do corpo da cobra
    corpo = []
    tamanho_inicial = 1

    # Geração aleatória da posição do ponto de alimentação
    ponto_x = round(random.randrange(0, largura_janela - tamanho_cobra) / 20.0) * 20.0
    ponto_y = round(random.randrange(0, altura_janela - tamanho_cobra) / 20.0) * 20.0

    # Pontuação inicial
    pontuacao = 0

    # Variável para controlar se o jogo deve ser reiniciado
    reiniciar_jogo = False

    # Loop principal do jogo
    jogo_ativo = True
    clock = pygame.time.Clock()

    while jogo_ativo:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                jogo_ativo = False

        if not reiniciar_jogo:
            # Controle da cobra através das teclas de setas
            keys = pygame.key.get_pressed()
            if keys[pygame.K_LEFT]:
                vel_x = -velocidade
                vel_y = 0
            elif keys[pygame.K_RIGHT]:
                vel_x = velocidade
                vel_y = 0
            elif keys[pygame.K_UP]:
                vel_x = 0
                vel_y = -velocidade
            elif keys[pygame.K_DOWN]:
                vel_x = 0
                vel_y = velocidade

            # Atualização da posição da cabeça da cobra
            pos_x += vel_x
            pos_y += vel_y

            # Verificação de colisão com as bordas da janela
            if pos_x < 0 or pos_x >= largura_janela or pos_y < 0 or pos_y >= altura_janela:
                reiniciar_jogo = True

            # Criação do retângulo da cabeça da cobra para destacá-la
            retangulo_cabeca = pygame.Rect(pos_x, pos_y, tamanho_cobra, tamanho_cobra)

            # Criação do corpo da cobra
            corpo.append((pos_x, pos_y))
            if len(corpo) > tamanho_inicial:
                del corpo[0]

            # Verificação de colisão da cobra com o próprio corpo
            for parte in corpo[:-1]:
                if parte == (pos_x, pos_y):
                    reiniciar_jogo = True

            # Verificação de colisão da cobra com o ponto de alimentação
            if retangulo_cabeca.colliderect(pygame.Rect(ponto_x, ponto_y, tamanho_cobra, tamanho_cobra)):
                # Geração aleatória de uma nova posição para o ponto de alimentação
                ponto_x = round(random.randrange(0, largura_janela - tamanho_cobra) / 20.0) * 20.0
                ponto_y = round(random.randrange(0, altura_janela - tamanho_cobra) / 20.0) * 20.0

                # Aumento da pontuação e tamanho da cobra
                pontuacao += 1
                tamanho_inicial += 1

        # Preenchimento da janela com a cor preta
        janela.fill(PRETO)

        if reiniciar_jogo:
            # Exibir botões de reiniciar e sair
            retangulo_reiniciar = exibir_botao_reiniciar()
            retangulo_sair = exibir_botao_sair()

            # Detecção do clique do mouse
            if event.type == pygame.MOUSEBUTTONDOWN:
                if retangulo_reiniciar.collidepoint(event.pos):
                    # Reiniciar o jogo
                    reiniciar_jogo = False
                    pos_x = largura_janela // 2
                    pos_y = altura_janela // 2
                    vel_x = 0
                    vel_y = 0
                    corpo = []
                    tamanho_inicial = 1
                    pontuacao = 0
                elif retangulo_sair.collidepoint(event.pos):
                    # Sair do jogo
                    pygame.quit()
                    sys.exit()

        else:
            # Desenho da cobra e do ponto de alimentação
            desenhar_cobra(corpo)
            pygame.draw.rect(janela, BRANCO, (ponto_x, ponto_y, tamanho_cobra, tamanho_cobra))

            # Exibição da pontuação no canto superior da tela
            fonte = pygame.font.SysFont(None, 30)
            texto_pontuacao = fonte.render("Pontuação: " + str(pontuacao), True, BRANCO)
            janela.blit(texto_pontuacao, (10, 10))

        # Atualização da janela
        pygame.display.update()

        # Definição da taxa de atualização (FPS)
        clock.tick(20)  # 20 FPS

    # Encerramento do Pygame
    pygame.quit()

# Execução do jogo
jogo_cobrinha()
